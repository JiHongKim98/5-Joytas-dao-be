services:
  mysql:
    image: mysql:8.3.0
    container_name: mysql8
    restart: always
    ports:
      - '3306:3306'
    environment:
      MYSQL_USER: dao-local-user
      MYSQL_PASSWORD: dao-local-password
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dao-local-db
      TZ: 'Asia/Seoul'
    volumes:
      - dao-mysqldb:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend-network

  redis:
    image: redis:7.2.4-alpine
    container_name: redis7
    command: redis-server --port 6379
    restart: always
    hostname: root
    labels:
      - 'mode:standalone'
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - backend-network

  mongodb:
    image: mongo:7.0.1
    container_name: mongo7
    ports:
      - '27017:27017'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: dao-local-db
    volumes:
      - mongo-data:/data/db
      - ./init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - backend-network

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    restart: always
    ports:
      - '4566:4566'
    environment:
      - SERVICES=sqs
      - AWS_DEFAULT_REGION=ap-northeast-2
      - AWS_ACCESS_KEY_ID=aws-local-access
      - AWS_SECRET_ACCESS_KEY=aws-local-secret
      - PERSISTENCE=true
      - DEBUG=1
    volumes:
      - localstack-data:/var/lib/localstack
      - ./init-queues.sh:/etc/localstack/init/ready.d/init-queues.sh
    networks:
      - backend-network

volumes:
  dao-mysqldb:
  redis-data:
  mongo-data:
  localstack-data:

networks:
  backend-network:
    external: true
